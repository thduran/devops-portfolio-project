version: "3.9"

services:
  backend:
    build: ./backend
    container_name: backend
    environment:
      # check .env
      DATABASE_URL: "postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
    depends_on:
      db: # database has to initialize first
        condition: service_healthy
    networks:
      - app-net
    ports:
      - "5000:5000"

  frontend:
    build: ./frontend
    container_name: frontend
    restart: unless-stopped # docker tries to restart container, only if not stopped by user
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-net
  
  db:
    image: postgres:15-alpine
    container_name: db
    restart: unless-stopped # docker tries to restart container, only if not stopped by user
    environment:
    # check .env
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      # mounts volume named 'postgres-data' in the data dir
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
    driver: local #volume managed by Docker in localhost

networks:
  app-net:
    driver: bridge